2024-10-12 16:51:07,329 [trainer.py] => config: ./exps/img.json
2024-10-12 16:51:07,329 [trainer.py] => prefix: -
2024-10-12 16:51:07,329 [trainer.py] => dataset: imagenetr
2024-10-12 16:51:07,329 [trainer.py] => memory_size: 4000
2024-10-12 16:51:07,329 [trainer.py] => memory_per_class: 20
2024-10-12 16:51:07,329 [trainer.py] => fixed_memory: True
2024-10-12 16:51:07,329 [trainer.py] => shuffle: True
2024-10-12 16:51:07,329 [trainer.py] => init_cls: 20
2024-10-12 16:51:07,329 [trainer.py] => increment: 20
2024-10-12 16:51:07,329 [trainer.py] => model_name: proof
2024-10-12 16:51:07,329 [trainer.py] => convnet_type: clip
2024-10-12 16:51:07,329 [trainer.py] => device: [device(type='cuda', index=0)]
2024-10-12 16:51:07,329 [trainer.py] => seed: 1993
2024-10-12 16:51:07,329 [trainer.py] => projection_type: pure_mlp
2024-10-12 16:51:07,329 [trainer.py] => frozen_layers: visual
2024-10-12 16:51:07,329 [trainer.py] => tuned_epoch: 10
2024-10-12 16:51:07,329 [trainer.py] => init_lr: 0.001
2024-10-12 16:51:07,329 [trainer.py] => batch_size: 48
2024-10-12 16:51:07,329 [trainer.py] => weight_decay: 0.05
2024-10-12 16:51:07,329 [trainer.py] => min_lr: 0
2024-10-12 16:51:07,329 [trainer.py] => optimizer: sgd
2024-10-12 16:51:07,396 [data_manager.py] => [168, 136, 51, 9, 183, 101, 171, 99, 42, 159, 191, 70, 16, 188, 27, 10, 175, 26, 68, 187, 98, 6, 85, 35, 112, 43, 100, 0, 103, 181, 88, 59, 4, 2, 116, 174, 94, 80, 106, 1, 147, 17, 141, 131, 72, 23, 173, 54, 197, 118, 87, 32, 79, 104, 91, 19, 135, 107, 178, 36, 11, 199, 142, 8, 122, 3, 28, 57, 153, 172, 190, 56, 49, 44, 97, 62, 151, 169, 194, 55, 192, 12, 189, 78, 66, 180, 15, 137, 109, 134, 92, 119, 126, 52, 170, 40, 148, 65, 144, 64, 138, 45, 77, 89, 154, 90, 71, 193, 74, 30, 113, 143, 96, 84, 67, 50, 186, 156, 69, 21, 18, 111, 108, 58, 125, 157, 150, 110, 182, 129, 166, 83, 81, 60, 13, 165, 14, 176, 63, 117, 5, 22, 145, 121, 38, 41, 82, 127, 114, 20, 31, 53, 37, 163, 196, 130, 152, 162, 86, 76, 24, 34, 184, 149, 33, 128, 198, 155, 146, 167, 139, 120, 140, 102, 47, 25, 158, 123, 46, 164, 61, 7, 115, 75, 133, 160, 105, 132, 179, 124, 48, 73, 93, 39, 95, 195, 29, 177, 185, 161]
2024-10-12 16:51:09,100 [factory.py] => Loaded ViT-B-16 model config.
2024-10-12 16:51:11,344 [factory.py] => Loaded ViT-B-16 model config.
2024-10-12 16:51:13,159 [trainer.py] => All params: 150670849
2024-10-12 16:51:13,160 [trainer.py] => Trainable params: 150670849
2024-10-12 16:51:13,309 [proof.py] => Learning on 0-20
2024-10-12 16:53:32,634 [base.py] => Constructing exemplars for new classes...(20 per classes)
2024-10-12 17:01:50,743 [trainer.py] => config: ./exps/img.json
2024-10-12 17:01:50,743 [trainer.py] => prefix: -
2024-10-12 17:01:50,743 [trainer.py] => dataset: imagenetr
2024-10-12 17:01:50,743 [trainer.py] => memory_size: 4000
2024-10-12 17:01:50,743 [trainer.py] => memory_per_class: 20
2024-10-12 17:01:50,743 [trainer.py] => fixed_memory: True
2024-10-12 17:01:50,743 [trainer.py] => shuffle: True
2024-10-12 17:01:50,743 [trainer.py] => init_cls: 20
2024-10-12 17:01:50,743 [trainer.py] => increment: 20
2024-10-12 17:01:50,743 [trainer.py] => model_name: proof
2024-10-12 17:01:50,743 [trainer.py] => convnet_type: clip
2024-10-12 17:01:50,744 [trainer.py] => device: [device(type='cuda', index=0)]
2024-10-12 17:01:50,744 [trainer.py] => seed: 1993
2024-10-12 17:01:50,744 [trainer.py] => projection_type: pure_mlp
2024-10-12 17:01:50,744 [trainer.py] => frozen_layers: visual
2024-10-12 17:01:50,744 [trainer.py] => tuned_epoch: 10
2024-10-12 17:01:50,744 [trainer.py] => init_lr: 0.001
2024-10-12 17:01:50,744 [trainer.py] => batch_size: 48
2024-10-12 17:01:50,744 [trainer.py] => weight_decay: 0.05
2024-10-12 17:01:50,744 [trainer.py] => min_lr: 0
2024-10-12 17:01:50,744 [trainer.py] => optimizer: sgd
2024-10-12 17:01:50,810 [data_manager.py] => [168, 136, 51, 9, 183, 101, 171, 99, 42, 159, 191, 70, 16, 188, 27, 10, 175, 26, 68, 187, 98, 6, 85, 35, 112, 43, 100, 0, 103, 181, 88, 59, 4, 2, 116, 174, 94, 80, 106, 1, 147, 17, 141, 131, 72, 23, 173, 54, 197, 118, 87, 32, 79, 104, 91, 19, 135, 107, 178, 36, 11, 199, 142, 8, 122, 3, 28, 57, 153, 172, 190, 56, 49, 44, 97, 62, 151, 169, 194, 55, 192, 12, 189, 78, 66, 180, 15, 137, 109, 134, 92, 119, 126, 52, 170, 40, 148, 65, 144, 64, 138, 45, 77, 89, 154, 90, 71, 193, 74, 30, 113, 143, 96, 84, 67, 50, 186, 156, 69, 21, 18, 111, 108, 58, 125, 157, 150, 110, 182, 129, 166, 83, 81, 60, 13, 165, 14, 176, 63, 117, 5, 22, 145, 121, 38, 41, 82, 127, 114, 20, 31, 53, 37, 163, 196, 130, 152, 162, 86, 76, 24, 34, 184, 149, 33, 128, 198, 155, 146, 167, 139, 120, 140, 102, 47, 25, 158, 123, 46, 164, 61, 7, 115, 75, 133, 160, 105, 132, 179, 124, 48, 73, 93, 39, 95, 195, 29, 177, 185, 161]
2024-10-12 17:01:52,153 [factory.py] => Loaded ViT-B-16 model config.
2024-10-12 17:01:53,806 [factory.py] => Loaded ViT-B-16 model config.
2024-10-12 17:01:55,367 [trainer.py] => All params: 150670849
2024-10-12 17:01:55,367 [trainer.py] => Trainable params: 150670849
2024-10-12 17:01:55,520 [proof.py] => Learning on 0-20
2024-10-12 17:04:16,938 [base.py] => Constructing exemplars for new classes...(20 per classes)
2024-10-12 17:05:05,071 [proof.py] => Exemplar size: 400
2024-10-12 17:05:05,072 [trainer.py] => CNN: {'total': 95.79, '00-09': 94.64, '10-19': 96.77, 'old': 0, 'new': 95.79, 'harmonic': 0.0}
2024-10-12 17:05:05,072 [trainer.py] => CNN top1 curve: [95.79]
2024-10-12 17:05:05,072 [trainer.py] => CNN top5 curve: [99.71]

2024-10-12 17:05:05,072 [trainer.py] => Average Accuracy (CNN): 95.79
2024-10-12 17:05:05,073 [trainer.py] => All params: 151197697
2024-10-12 17:05:05,074 [trainer.py] => Trainable params: 1576961
2024-10-12 17:05:05,088 [proof.py] => Learning on 20-40
2024-10-12 17:07:40,951 [base.py] => Constructing exemplars for new classes...(20 per classes)
2024-10-12 17:08:44,743 [proof.py] => Exemplar size: 800
2024-10-12 17:08:44,743 [trainer.py] => CNN: {'total': 89.86, '00-09': 90.22, '10-19': 91.94, '20-29': 90.67, '30-39': 86.45, 'old': 91.15, 'new': 88.45, 'harmonic': 89.78}
2024-10-12 17:08:44,743 [trainer.py] => CNN top1 curve: [95.79, 89.86]
2024-10-12 17:08:44,743 [trainer.py] => CNN top5 curve: [99.71, 98.86]

2024-10-12 17:08:44,744 [trainer.py] => Average Accuracy (CNN): 92.825
2024-10-12 17:08:44,745 [trainer.py] => All params: 151724545
2024-10-12 17:08:44,745 [trainer.py] => Trainable params: 1839617
2024-10-12 17:08:44,750 [proof.py] => Learning on 40-60
2024-10-12 17:11:36,333 [base.py] => Constructing exemplars for new classes...(20 per classes)
2024-10-12 17:12:59,784 [proof.py] => Exemplar size: 1200
2024-10-12 17:12:59,785 [trainer.py] => CNN: {'total': 87.8, '00-09': 89.59, '10-19': 90.86, '20-29': 86.0, '30-39': 83.13, '40-49': 88.41, '50-59': 88.49, 'old': 87.51, 'new': 88.45, 'harmonic': 87.98}
2024-10-12 17:12:59,785 [trainer.py] => CNN top1 curve: [95.79, 89.86, 87.8]
2024-10-12 17:12:59,785 [trainer.py] => CNN top5 curve: [99.71, 98.86, 97.72]

2024-10-12 17:12:59,785 [trainer.py] => Average Accuracy (CNN): 91.14999999999999
2024-10-12 17:12:59,786 [trainer.py] => All params: 152251393
2024-10-12 17:12:59,787 [trainer.py] => Trainable params: 2102273
2024-10-12 17:12:59,791 [proof.py] => Learning on 60-80
2024-10-12 17:16:08,666 [base.py] => Constructing exemplars for new classes...(20 per classes)
2024-10-12 17:17:57,886 [proof.py] => Exemplar size: 1600
2024-10-12 17:17:57,887 [trainer.py] => CNN: {'total': 85.11, '00-09': 85.17, '10-19': 90.59, '20-29': 83.0, '30-39': 82.53, '40-49': 84.11, '50-59': 84.87, '60-69': 81.21, '70-79': 88.64, 'old': 85.21, 'new': 84.76, 'harmonic': 84.98}
2024-10-12 17:17:57,887 [trainer.py] => CNN top1 curve: [95.79, 89.86, 87.8, 85.11]
2024-10-12 17:17:57,887 [trainer.py] => CNN top5 curve: [99.71, 98.86, 97.72, 96.84]

2024-10-12 17:17:57,887 [trainer.py] => Average Accuracy (CNN): 89.64
2024-10-12 17:17:57,888 [trainer.py] => All params: 152778241
2024-10-12 17:17:57,889 [trainer.py] => Trainable params: 2364929
2024-10-12 17:17:57,899 [proof.py] => Learning on 80-100
2024-10-12 17:21:34,550 [base.py] => Constructing exemplars for new classes...(20 per classes)
2024-10-12 17:23:35,212 [proof.py] => Exemplar size: 2000
2024-10-12 17:23:35,212 [trainer.py] => CNN: {'total': 82.35, '00-09': 81.7, '10-19': 89.52, '20-29': 81.33, '30-39': 80.12, '40-49': 80.79, '50-59': 82.24, '60-69': 76.85, '70-79': 84.98, '80-89': 86.13, '90-99': 75.71, 'old': 82.35, 'new': 82.34, 'harmonic': 82.34}
2024-10-12 17:23:35,212 [trainer.py] => CNN top1 curve: [95.79, 89.86, 87.8, 85.11, 82.35]
2024-10-12 17:23:35,212 [trainer.py] => CNN top5 curve: [99.71, 98.86, 97.72, 96.84, 95.58]

2024-10-12 17:23:35,213 [trainer.py] => Average Accuracy (CNN): 88.18199999999999
2024-10-12 17:23:35,214 [trainer.py] => All params: 153305089
2024-10-12 17:23:35,216 [trainer.py] => Trainable params: 2627585
2024-10-12 17:23:35,230 [proof.py] => Learning on 100-120
2024-10-12 17:28:23,846 [base.py] => Constructing exemplars for new classes...(20 per classes)
2024-10-12 17:30:38,832 [proof.py] => Exemplar size: 2400
2024-10-12 17:30:38,832 [trainer.py] => CNN: {'total': 81.95, '00-09': 84.23, '10-19': 84.95, '20-29': 80.0, '30-39': 81.02, '40-49': 79.47, '50-59': 82.24, '60-69': 70.47, '70-79': 80.59, '80-89': 82.9, '90-99': 78.53, '100-109': 89.08, '110-119': 86.7, 'old': 80.67, 'new': 87.73, 'harmonic': 84.05}
2024-10-12 17:30:38,832 [trainer.py] => CNN top1 curve: [95.79, 89.86, 87.8, 85.11, 82.35, 81.95]
2024-10-12 17:30:38,832 [trainer.py] => CNN top5 curve: [99.71, 98.86, 97.72, 96.84, 95.58, 94.71]

2024-10-12 17:30:38,832 [trainer.py] => Average Accuracy (CNN): 87.14333333333333
2024-10-12 17:30:38,834 [trainer.py] => All params: 153831937
2024-10-12 17:30:38,835 [trainer.py] => Trainable params: 2890241
2024-10-12 17:30:38,849 [proof.py] => Learning on 120-140
2024-10-12 17:35:30,934 [base.py] => Constructing exemplars for new classes...(20 per classes)
2024-10-12 17:37:58,447 [proof.py] => Exemplar size: 2800
2024-10-12 17:37:58,448 [trainer.py] => CNN: {'total': 81.11, '00-09': 83.6, '10-19': 83.33, '20-29': 76.33, '30-39': 78.31, '40-49': 79.47, '50-59': 82.57, '60-69': 72.48, '70-79': 80.59, '80-89': 81.61, '90-99': 71.75, '100-109': 86.62, '110-119': 83.24, '120-129': 85.61, '130-139': 85.91, 'old': 80.38, 'new': 85.76, 'harmonic': 82.98}
2024-10-12 17:37:58,448 [trainer.py] => CNN top1 curve: [95.79, 89.86, 87.8, 85.11, 82.35, 81.95, 81.11]
2024-10-12 17:37:58,448 [trainer.py] => CNN top5 curve: [99.71, 98.86, 97.72, 96.84, 95.58, 94.71, 94.38]

2024-10-12 17:37:58,448 [trainer.py] => Average Accuracy (CNN): 86.28142857142858
2024-10-12 17:37:58,449 [trainer.py] => All params: 154358785
2024-10-12 17:37:58,450 [trainer.py] => Trainable params: 3152897
2024-10-12 17:37:58,460 [proof.py] => Learning on 140-160
2024-10-12 17:44:13,488 [base.py] => Constructing exemplars for new classes...(20 per classes)
2024-10-12 17:46:39,400 [proof.py] => Exemplar size: 3200
2024-10-12 17:46:39,400 [trainer.py] => CNN: {'total': 80.38, '00-09': 79.81, '10-19': 83.87, '20-29': 76.67, '30-39': 77.71, '40-49': 76.16, '50-59': 80.92, '60-69': 72.82, '70-79': 79.85, '80-89': 79.35, '90-99': 70.62, '100-109': 82.04, '110-119': 80.32, '120-129': 78.97, '130-139': 78.86, '140-149': 89.37, '150-159': 90.06, 'old': 78.76, 'new': 89.71, 'harmonic': 83.88}
2024-10-12 17:46:39,400 [trainer.py] => CNN top1 curve: [95.79, 89.86, 87.8, 85.11, 82.35, 81.95, 81.11, 80.38]
2024-10-12 17:46:39,400 [trainer.py] => CNN top5 curve: [99.71, 98.86, 97.72, 96.84, 95.58, 94.71, 94.38, 94.29]

2024-10-12 17:46:39,400 [trainer.py] => Average Accuracy (CNN): 85.54375
2024-10-12 17:46:39,401 [trainer.py] => All params: 154885633
2024-10-12 17:46:39,402 [trainer.py] => Trainable params: 3415553
2024-10-12 17:46:39,411 [proof.py] => Learning on 160-180
2024-10-12 17:52:34,214 [base.py] => Constructing exemplars for new classes...(20 per classes)
2024-10-12 17:55:09,397 [proof.py] => Exemplar size: 3600
2024-10-12 17:55:09,398 [trainer.py] => CNN: {'total': 79.03, '00-09': 79.81, '10-19': 80.65, '20-29': 75.67, '30-39': 78.61, '40-49': 77.15, '50-59': 79.93, '60-69': 70.81, '70-79': 76.19, '80-89': 77.42, '90-99': 70.06, '100-109': 82.39, '110-119': 78.46, '120-129': 75.65, '130-139': 79.87, '140-149': 81.47, '150-159': 83.98, '160-169': 84.35, '170-179': 86.69, 'old': 78.39, 'new': 85.56, 'harmonic': 81.82}
2024-10-12 17:55:09,398 [trainer.py] => CNN top1 curve: [95.79, 89.86, 87.8, 85.11, 82.35, 81.95, 81.11, 80.38, 79.03]
2024-10-12 17:55:09,398 [trainer.py] => CNN top5 curve: [99.71, 98.86, 97.72, 96.84, 95.58, 94.71, 94.38, 94.29, 93.21]

2024-10-12 17:55:09,398 [trainer.py] => Average Accuracy (CNN): 84.82
2024-10-12 17:55:09,399 [trainer.py] => All params: 155412481
2024-10-12 17:55:09,401 [trainer.py] => Trainable params: 3678209
2024-10-12 17:55:09,410 [proof.py] => Learning on 180-200
2024-10-12 18:02:03,749 [base.py] => Constructing exemplars for new classes...(20 per classes)
2024-10-12 18:04:47,923 [proof.py] => Exemplar size: 4000
2024-10-12 18:04:47,923 [trainer.py] => CNN: {'total': 78.5, '00-09': 80.76, '10-19': 79.57, '20-29': 74.0, '30-39': 75.3, '40-49': 76.16, '50-59': 74.67, '60-69': 72.15, '70-79': 76.56, '80-89': 76.77, '90-99': 68.93, '100-109': 76.06, '110-119': 79.52, '120-129': 76.01, '130-139': 78.86, '140-149': 81.47, '150-159': 82.6, '160-169': 79.13, '170-179': 81.05, '180-189': 86.69, '190-199': 88.93, 'old': 77.51, 'new': 87.74, 'harmonic': 82.31}
2024-10-12 18:04:47,923 [trainer.py] => CNN top1 curve: [95.79, 89.86, 87.8, 85.11, 82.35, 81.95, 81.11, 80.38, 79.03, 78.5]
2024-10-12 18:04:47,923 [trainer.py] => CNN top5 curve: [99.71, 98.86, 97.72, 96.84, 95.58, 94.71, 94.38, 94.29, 93.21, 92.88]

2024-10-12 18:04:47,923 [trainer.py] => Average Accuracy (CNN): 84.188
